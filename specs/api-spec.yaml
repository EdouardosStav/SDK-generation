openapi: 3.0.0
info:
  title: My API
  version: 1.0.0
  description: A simple API for testing SDK generation
servers:
  - url: https://api.example.com
    description: Production server
paths:
  /users:
    get:
      summary: Get all users
      description: Retrieve a list of all users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      description: Create a new user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
  /users/{id}:
    get:
      summary: Get user by ID
      description: Retrieve a specific user by their ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      summary: Update user
      description: Update an existing user
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
  /messages:
    get:
      summary: Get messages
      description: Retrieve messages for authenticated user
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
    post:
      summary: Send message
      description: Send a new message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
      responses:
        '201':
          description: Message sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: Unique user identifier
        name:
          type: string
          description: User's full name
        email:
          type: string
          format: email
          description: User's email address
        created_at:
          type: string
          format: date-time
          description: Account creation timestamp
      required:
        - id
        - name
        - email
        - created_at
    CreateUserRequest:
      type: object
      properties:
        name:
          type: string
          description: User's full name
        email:
          type: string
          format: email
          description: User's email address
      required:
        - name
        - email
    UpdateUserRequest:
      type: object
      properties:
        name:
          type: string
          description: User's full name
        email:
          type: string
          format: email
          description: User's email address
    Message:
      type: object
      properties:
        id:
          type: integer
          description: Unique message identifier
        content:
          type: string
          description: Message content
        sender_id:
          type: integer
          description: ID of the user who sent the message
        recipient_id:
          type: integer
          description: ID of the user who will receive the message
        timestamp:
          type: string
          format: date-time
          description: When the message was sent
      required:
        - id
        - content
        - sender_id
        - recipient_id
        - timestamp
    SendMessageRequest:
      type: object
      properties:
        content:
          type: string
          description: Message content
        recipient_id:
          type: integer
          description: ID of the user who will receive the message
      required:
        - content
        - recipient_id
# Test change
# Enterprise pipeline test
# Enterprise pipeline ready!
# Testing enterprise multi-environment pipeline
# Test multi-environment pipeline
# Test enterprise DevOps pipeline
