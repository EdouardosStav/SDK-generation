openapi: 3.0.0
info:
  description: A simple API for testing SDK generation
  title: My API
  version: 1.0.0
servers:
- description: Production server
  url: https://api.example.com
paths:
  /users:
    get:
      description: Retrieve a list of all users
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/User"
                type: array
          description: Successful response
      summary: Get all users
    post:
      description: Create a new user account
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: User created successfully
        "400":
          description: Bad request
      summary: Create a new user
  /users/{id}:
    get:
      description: Retrieve a specific user by their ID
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: Successful response
        "404":
          description: User not found
      summary: Get user by ID
    put:
      description: Update an existing user
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserRequest"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: User updated successfully
        "404":
          description: User not found
      summary: Update user
  /messages:
    get:
      description: Retrieve messages for authenticated user
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Message"
                type: array
          description: Successful response
      summary: Get messages
    post:
      description: Send a new message
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendMessageRequest"
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
          description: Message sent successfully
      summary: Send message
components:
  schemas:
    User:
      example:
        name: name
        created_at: 2000-01-23T04:56:07.000+00:00
        id: 0
        email: email
      properties:
        id:
          description: Unique user identifier
          type: integer
        name:
          description: User's full name
          type: string
        email:
          description: User's email address
          format: email
          type: string
        created_at:
          description: Account creation timestamp
          format: date-time
          type: string
      required:
      - created_at
      - email
      - id
      - name
      type: object
    CreateUserRequest:
      example:
        name: name
        email: email
      properties:
        name:
          description: User's full name
          type: string
        email:
          description: User's email address
          format: email
          type: string
      required:
      - email
      - name
      type: object
    UpdateUserRequest:
      example:
        name: name
        email: email
      properties:
        name:
          description: User's full name
          type: string
        email:
          description: User's email address
          format: email
          type: string
      type: object
    Message:
      example:
        id: 0
        content: content
        sender_id: 6
        recipient_id: 1
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Unique message identifier
          type: integer
        content:
          description: Message content
          type: string
        sender_id:
          description: ID of the user who sent the message
          type: integer
        recipient_id:
          description: ID of the user who will receive the message
          type: integer
        timestamp:
          description: When the message was sent
          format: date-time
          type: string
      required:
      - content
      - id
      - recipient_id
      - sender_id
      - timestamp
      type: object
    SendMessageRequest:
      example:
        content: content
        recipient_id: 0
      properties:
        content:
          description: Message content
          type: string
        recipient_id:
          description: ID of the user who will receive the message
          type: integer
      required:
      - content
      - recipient_id
      type: object

