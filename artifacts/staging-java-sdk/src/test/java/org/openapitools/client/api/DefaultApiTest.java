/*
 * My API
 * A simple API for testing SDK generation
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CreateUserRequest;
import org.openapitools.client.model.Message;
import org.openapitools.client.model.SendMessageRequest;
import org.openapitools.client.model.UpdateUserRequest;
import org.openapitools.client.model.User;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Get messages
     *
     * Retrieve messages for authenticated user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void messagesGetTest() throws ApiException {
        List<Message> response = api.messagesGet();
        // TODO: test validations
    }

    /**
     * Send message
     *
     * Send a new message
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void messagesPostTest() throws ApiException {
        SendMessageRequest sendMessageRequest = null;
        Message response = api.messagesPost(sendMessageRequest);
        // TODO: test validations
    }

    /**
     * Get all users
     *
     * Retrieve a list of all users
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersGetTest() throws ApiException {
        List<User> response = api.usersGet();
        // TODO: test validations
    }

    /**
     * Get user by ID
     *
     * Retrieve a specific user by their ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersIdGetTest() throws ApiException {
        Integer id = null;
        User response = api.usersIdGet(id);
        // TODO: test validations
    }

    /**
     * Update user
     *
     * Update an existing user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersIdPutTest() throws ApiException {
        Integer id = null;
        UpdateUserRequest updateUserRequest = null;
        User response = api.usersIdPut(id, updateUserRequest);
        // TODO: test validations
    }

    /**
     * Create a new user
     *
     * Create a new user account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void usersPostTest() throws ApiException {
        CreateUserRequest createUserRequest = null;
        User response = api.usersPost(createUserRequest);
        // TODO: test validations
    }

}
